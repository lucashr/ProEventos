{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport { environment } from '@environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EventoService = /*#__PURE__*/(() => {\n  class EventoService {\n    constructor(http) {\n      this.http = http;\n      this.baseURL = environment.apiURL + 'api/eventos';\n    }\n\n    getEventos() {\n      return this.http.get(this.baseURL).pipe(take(1));\n    }\n\n    getEventosByTema(tema) {\n      return this.http.get(`${this.baseURL}/${tema}/tema`).pipe(take(1));\n    }\n\n    getEventoById(id) {\n      return this.http.get(`${this.baseURL}/${id}`).pipe(take(1));\n    }\n\n    post(evento) {\n      return this.http.post(this.baseURL, evento).pipe(take(1));\n    }\n\n    put(evento) {\n      return this.http.put(`${this.baseURL}/${evento.id}`, evento).pipe(take(1));\n    }\n\n    deleteEventos(id) {\n      return this.http.delete(`${this.baseURL}/${id}`).pipe(take(1));\n    }\n\n    postUpload(eventoId, file) {\n      const fielToupload = file[0];\n      const formData = new FormData();\n      formData.append('file', fielToupload);\n      return this.http.post(`${this.baseURL}/upload-image/${eventoId}`, formData).pipe(take(1));\n    }\n\n  }\n\n  EventoService.ɵfac = function EventoService_Factory(t) {\n    return new (t || EventoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  EventoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventoService,\n    factory: EventoService.ɵfac\n  });\n  return EventoService;\n})();","map":null,"metadata":{},"sourceType":"module"}